%Will Johnson, Matt Bass, Jackson Prettyman
%5/2/21
%CS346 Homework 3 Exercise 1


%all numerical constants
C_m = 0.1; %capacitance muF/cm^3
I = 15; %applied current nA
V_init = -65; %initial action potential mV
V_k = -77; % displacment from equlibirum potential for K+ mV
K_plusI = 150; %Potassium ion concentration inside mM/L
K_plusO = 5.5; %Pottasium ion concentration outside mM/L
V_na = 49.3; %displacment from equilibrium potential for Na+ mV
NA_plusI = 15; %soodium ion concentration inside mM/L
NA_plisO = 150; %sodium ion concentration outside mM/L
V_L = -54.4; %displacment from equilibrium for leakage mV
g_k = 36; %max K condcutance mS/cm^2
g_na = 120; %max Na conductance S/cm^2
g_L = 0.3; %mac leakage conductance S/cm^2
n_init = 0.317; %pottasium activation gating variable
m_init = 0.05; %sodium activation gating variable 
h_init = 0.6; %sodium inactivation gating variable 


%non derivative functions 
%Opening rate constant m/s
a_n = @(Voltage) (0.01*(Voltage+55)/(1-exp(-(Voltage+55)/10)));
%Opening rate constant m/s
a_m = @(Voltage) (0.1*(Voltage+40)/(1-exp(-(Voltage+40)/10)));
%Opening rate constant m/s
a_h = @(Voltage) (0.07*exp(-(Voltage+65)/20));
%closing rate constant m/s
b_n = @(Voltage) (0.125*exp(-(Voltage+65)/80));
%closing rate constant m/s 
b_m = @(Voltage) (4*exp(-(Voltage+65)/18));
%Closing rate constant m/s
b_h = @(Voltage) (1/(exp(-(Voltage+35)/10)+1));
%Potassium channnel current nA
I_k = @(Voltage,n_val,m_val,h_val) (g_k*n_val^4*(Voltage - V_k));
%Leakage current nA
I_L = @(Voltage,n_val,m_val,h_val) (g_L*(Voltage-V_L));
%Sodium channel current nA
I_na = @(Voltage,n_val,m_val,h_val) (g_na*m_val^3*h_val*(Voltage-V_na));


%derivative functions 
%Derivative function for voltage
dvdt = @(Voltage,n_val,m_val,h_val) ...
    (I-I_k(Voltage,n_val,m_val,h_val)-I_na(Voltage,n_val,m_val,h_val) ...
    -I_L(Voltage,n_val,m_val,h_val));
%derivative function for n 
dndt = @(voltage,n_val,m_val,h_val) (a_n(voltage)*(1-n_val)- ...
    (b_n(voltage)*n_val));
%derivative function for m
dmdt = @(voltage,n_val,m_val,h_val) (a_m(voltage)*(1-m_val)- ...
    (b_m(voltage)*m_val));
%derivative function for h 
dhdt = @(voltage,n_val,m_val,h_val) (a_h(voltage)*(1-h_val)- ...
    (b_h(voltage)*h_val));

%simulation numbers
t = 3; %total time in seconds 
dt = 0.001 %time step in ms
num_iter = t/dt; %total iterations

%Lists for data storage and plots
V = zeros(1,num_iter);
n = zeros(1,num_iter);
m = zeros(1,num_iter);
h = zeros(1,num_iter);
time = zeros(1,num_iter);



%First value initializations
V(1) = V_init;
n(1) = n_init;
m(1) = m_init;
h(1) = h_init;


%rk4 simulation
for i = 2:num_iter
    time(i) = (i-1)*dt;
    k1 = dt * dvdt(V(i - 1), n(i - 1), m(i - 1), h(i - 1));
    n1 = dt * dndt(V(i - 1), n(i - 1), m(i - 1), h(i - 1));
    m1 = dt * dmdt(V(i - 1), n(i - 1), m(i - 1), h(i - 1)); 
    h1 = dt * dhdt(V(i - 1), n(i - 1), m(i - 1), h(i - 1));

    k2 = dt * dvdt(V(i - 1) + (0.5 * k1), n(i - 1) + ...
        (0.5 * n1), m(i - 1) + (0.5 * m1), h(i - 1) + (0.5 * h1));
    n2 = dt * dndt(V(i - 1) + (0.5 * k1), n(i - 1) + ...
        (0.5 * n1), m(i - 1) + (0.5 * m1), h(i - 1) + (0.5 * h1));
    m2 = dt * dmdt(V(i - 1) + (0.5 * k1), n(i - 1) + ...
        (0.5 * n1), m(i - 1) + (0.5 * m1), h(i - 1) + (0.5 * h1));
    h2 = dt * dhdt(V(i - 1) + (0.5 * k1), n(i - 1) + ...
        (0.5 * n1), m(i - 1) + (0.5 * m1), h(i - 1) + (0.5 * h1));

    k3 = dt * dvdt(V(i - 1) + (0.5 * k2), n(i - 1) + ...
        (0.5 * n2), m(i - 1) + (0.5 * m2), h(i - 1) + (0.5 * h2));
    n3 = dt * dndt(V(i - 1) + (0.5 * k2), n(i - 1) + ...
        (0.5 * n2), m(i - 1) + (0.5 * m2), h(i - 1) + (0.5 * h2));
    m3 = dt * dmdt(V(i - 1) + (0.5 * k2), n(i - 1) + ...
        (0.5 * n2), m(i - 1) + (0.5 * m2), h(i - 1) + (0.5 * h2));
    h3 = dt * dhdt(V(i - 1) + (0.5 * k2), n(i - 1) + ...
        (0.5 * n2), m(i - 1) + (0.5 * m2), h(i - 1) + (0.5 * h2));
 
    k4 = dt * dvdt(V(i - 1) + k3, n(i - 1) + n3, m(i - 1) + m3, ...
        h(i - 1) + h3);
    n4 = dt * dndt(V(i - 1) + k3, n(i - 1) + n3, m(i - 1) + m3, ...
        h(i - 1) + h3);
    m4 = dt * dmdt(V(i - 1) + k3, n(i - 1) + n3, m(i - 1) + m3, ...
        h(i - 1) + h3);
    h4 = dt * dhdt(V(i - 1) + k3, n(i - 1) + n3, m(i - 1) + m3, ...
        h(i - 1) + h3);

    V(i) = V(i - 1) + 1 / 6 * (k1 + 2 * k2 + 2 * k3 + k4);
    n(i) = n(i - 1) + 1 / 6 * (n1 + 2 * n2 + 2 * n3 + n4);
    m(i) = m(i - 1) + 1 / 6 * (m1 + 2 * m2 + 2 * m3 + m4);
    h(i) = h(i - 1) + 1 / 6 * (h1 + 2 * h2 + 2 * h3 + h4);
    
end

plot(time,V);
